name: Deploy Helm Chart

on:
  push:
    branches:
      - main  # Branch usada para deploys

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Checkout do c처digo
    - name: Checkout code
      uses: actions/checkout@v3

    # Passo 2: Clonar o reposit처rio com Helm Charts
    - name: Clone Helm Charts Repository
      env:
        GH_USERNAME: ${{ secrets.GH_USERNAME }}
        GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        git clone https://$GH_USERNAME:$GH_TOKEN@github.com/nataliagranato/senhas.git


    # Passo 3: Instalar kubectl
    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    # Passo 4: Configurar a conex찾o com o cluster Kubernetes
    - name: Configure Kubernetes context
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "$KUBECONFIG" | base64 --decode > kubeconfig
        export KUBECONFIG=$(pwd)/kubeconfig
        kubectl get nodes

#    # Passo 5: Instalar Helm
#    - name: Install Helm
#      uses: azure/setup-helm@v1
#      with:
#        version: 'latest'

#    # Passo 6: Criar namespaces se n찾o existirem
#    - name: Create namespaces
#      env:
#        KUBECONFIG: ${{ secrets.KUBECONFIG }}
#      run: |
#        echo "$KUBECONFIG" | base64 --decode > kubeconfig
#        export KUBECONFIG=$(pwd)/kubeconfig
#        kubectl create namespace giropops-senhas-prd || true
#        kubectl create namespace giropops-senhas-dev || true
#        kubectl create namespace giropops-senhas-stg || true


#    - name: Deploy Helm Chart to Production
#      env:
#          KUBECONFIG: ${{ secrets.KUBECONFIG }}
#      run: |
#        cd /senhas/charts/senhas
#        echo "$KUBECONFIG" | base64 --decode > kubeconfig
#        export KUBECONFIG=$(pwd)/kubeconfig
#        helm upgrade -i giropops-senhas -n giropops-senhas-prd .

      